function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const theacher = "jszhong";
console.log(theacher);

class Student {
  constructor() {
    _defineProperty(this, "study", true);
  }

  say() {
    return 'i am a good student!';
  }

}

class Teacher {
  constructor() {
    _defineProperty(this, "study", false);
  }

  teach() {
    return 'i`m your teacher !';
  }

}

const animal = new Student();
const animal1 = new Teacher();

function judgeWho(animal) {
  if (animal.study) {
    console.log(animal.say());
  } else {
    console.log(animal.teach());
  }
}

function judge(animal1) {
  if ('say' in animal1) {
    console.log(animal1.say());
  } else {
    console.log(animal1.teach());
  }
}

function add(first, second) {
  if (typeof first === 'string' || typeof second === 'string') {
    return `${first}${second}`;
  }

  return first + second;
}

console.log('add(1,2)', add(1, 2));
console.log('add(a,b)', add('a', 'b'));

class NumberObj {}

function addObj(first, second) {
  if (first instanceof NumberObj && second instanceof NumberObj) {
    if (typeof first.count === 'undefined' || typeof second.count === 'undefined') {
      return 0;
    }

    return first.count + second.count;
  }

  return 0;
}

const p1 = new NumberObj();
p1.count = 120;
const p2 = new NumberObj();
p2.count = 120;
const num = addObj(p1, p2);
console.log('addObj', num);